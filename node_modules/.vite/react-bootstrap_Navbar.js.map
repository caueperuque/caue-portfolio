{
  "version": 3,
  "sources": ["../react-bootstrap/esm/Navbar.js", "../react-bootstrap/esm/NavbarBrand.js", "../react-bootstrap/esm/NavbarCollapse.js", "../react-bootstrap/esm/Collapse.js", "../react-bootstrap/esm/createChainedFunction.js", "../react-bootstrap/esm/NavbarToggle.js", "../react-bootstrap/esm/NavbarOffcanvas.js", "../react-bootstrap/esm/Offcanvas.js", "../@restart/hooks/esm/useMediaQuery.js", "../@restart/hooks/esm/useBreakpoint.js", "../dom-helpers/esm/activeElement.js", "../dom-helpers/esm/contains.js", "../@restart/ui/esm/Modal.js", "../@restart/hooks/esm/useUpdatedRef.js", "../@restart/hooks/esm/useWillUnmount.js", "../@restart/ui/esm/getScrollbarWidth.js", "../@restart/ui/esm/ModalManager.js", "../@restart/ui/esm/useWaitForDOMRef.js", "../@restart/ui/esm/useWindow.js", "../react-bootstrap/esm/OffcanvasBody.js", "../react-bootstrap/esm/OffcanvasToggling.js", "../react-bootstrap/esm/ModalContext.js", "../react-bootstrap/esm/OffcanvasHeader.js", "../react-bootstrap/esm/AbstractModalHeader.js", "../react-bootstrap/esm/OffcanvasTitle.js", "../dom-helpers/esm/hasClass.js", "../dom-helpers/esm/addClass.js", "../dom-helpers/esm/removeClass.js", "../react-bootstrap/esm/BootstrapModalManager.js", "dep:react-bootstrap_Navbar"],
  "sourcesContent": ["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand,\n    variant,\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null ? void 0 : onSelect(...args);\n\n    if (collapseOnSelect && expanded) {\n      onToggle == null ? void 0 : onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});", "import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;", "import * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;", "import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;", "/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;", "import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'Toggle navigation'\n};\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;", "import * as React from 'react';\nimport { useContext } from 'react';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;", "import classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  scroll: false,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  placement: 'start',\n  renderStaticNode: false\n};\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement,\n  responsive,\n\n  /* BaseModal props */\n  show,\n  backdrop,\n  keyboard,\n  scroll,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null ? void 0 : onToggle();\n    onHide == null ? void 0 : onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null ? void 0 : onEnter(node, ...args);\n  };\n\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", { ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nOffcanvas.defaultProps = defaultProps;\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});", "import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nvar matchersByWindow = new WeakMap();\n\nvar getMatcher = function getMatcher(query, targetWindow) {\n  if (!query || !targetWindow) return undefined;\n  var matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  var mql = matchers.get(query);\n\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\n\n\nexport default function useMediaQuery(query, targetWindow) {\n  if (targetWindow === void 0) {\n    targetWindow = typeof window === 'undefined' ? undefined : window;\n  }\n\n  var mql = getMatcher(query, targetWindow);\n\n  var _useState = useState(function () {\n    return mql ? mql.matches : false;\n  }),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  useEffect(function () {\n    var mql = getMatcher(query, targetWindow);\n\n    if (!mql) {\n      return setMatches(false);\n    }\n\n    var matchers = matchersByWindow.get(targetWindow);\n\n    var handleChange = function handleChange() {\n      setMatches(mql.matches);\n    };\n\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return function () {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}", "import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  var names = Object.keys(breakpointValues);\n\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n\n    return query ? query + \" and \" + next : next;\n  }\n\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n\n  function getMaxQuery(breakpoint) {\n    var next = getNext(breakpoint);\n    var value = breakpointValues[next];\n    if (typeof value === 'number') value = value - 0.2 + \"px\";else value = \"calc(\" + value + \" - 0.2px)\";\n    return \"(max-width: \" + value + \")\";\n  }\n\n  function getMinQuery(breakpoint) {\n    var value = breakpointValues[breakpoint];\n\n    if (typeof value === 'number') {\n      value = value + \"px\";\n    }\n\n    return \"(min-width: \" + value + \")\";\n  }\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    var breakpointMap;\n\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      var _breakpointMap;\n\n      direction = direction || true;\n      breakpointMap = (_breakpointMap = {}, _breakpointMap[breakpointOrMap] = direction, _breakpointMap);\n    }\n\n    var query = useMemo(function () {\n      return Object.entries(breakpointMap).reduce(function (query, _ref) {\n        var key = _ref[0],\n            direction = _ref[1];\n\n        if (direction === 'up' || direction === true) {\n          query = and(query, getMinQuery(key));\n        }\n\n        if (direction === 'down' || direction === true) {\n          query = and(query, getMaxQuery(key));\n        }\n\n        return query;\n      }, '');\n    }, [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n\n  return useBreakpoint;\n}\nvar useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;", "import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}", "/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}", "const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});", "import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}", "import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}", "/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}", "import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;", "import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}", "import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}", "import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('offcanvas-body');", "import classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.defaultProps = defaultProps;\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;", "import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;", "import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nOffcanvasHeader.defaultProps = defaultProps;\nexport default OffcanvasHeader;", "import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;", "import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH5 = divWithClassName('h5');\nexport default createWithBsPrefix('offcanvas-title', {\n  Component: DivStyledAsH5\n});", "/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}", "import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}", "function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}", "import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;", "import d from \"./node_modules/react-bootstrap/esm/Navbar.js\";export default d;"],
  "mappings": "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",
  "names": []
}
