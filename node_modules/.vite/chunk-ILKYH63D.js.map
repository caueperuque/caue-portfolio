{
  "version": 3,
  "sources": ["../react-bootstrap/esm/createWithBsPrefix.js", "../dom-helpers/esm/camelize.js"],
  "sourcesContent": ["import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}", "var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}"],
  "mappings": ";;;;;;;;;;;;;;;AAAA,wBAAuB;;;ACAvB,IAAI,UAAU;AACC,kBAAkB,QAAQ;AACvC,SAAO,OAAO,QAAQ,SAAS,SAAU,GAAG,KAAK;AAC/C,WAAO,IAAI;AAAA;AAAA;;;ADDf,YAAuB;AAEvB,yBAA4B;AAE5B,IAAM,aAAa,SAAO,IAAI,GAAG,gBAAgB,SAAS,KAAK,MAAM;AAGtD,4BAA4B,QAAQ;AAAA,EACjD,cAAc,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,IACE,IAAI;AACN,QAAM,cAA2B,AAAM,iBAAW,CAAC,IAKhD,QAAQ;AALwC,iBACjD;AAAA;AAAA,MACA;AAAA,MACA,IAAI,MAAM,aAAa;AAAA,QAH0B,IAI9C,kBAJ8C,IAI9C;AAAA,MAHH;AAAA,MACA;AAAA,MACA;AAAA;AAGA,UAAM,iBAAiB,mBAAmB,UAAU;AACpD,WAAoB,4BAAK,KAAK;AAAA,MAC5B;AAAA,MACA,WAAW,+BAAW,WAAW;AAAA,OAC9B;AAAA;AAGP,cAAY,eAAe;AAC3B,cAAY,cAAc;AAC1B,SAAO;AAAA;",
  "names": []
}
